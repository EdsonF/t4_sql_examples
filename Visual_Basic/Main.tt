<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="C:\Data\Dev\Visual Studio\cs_utilities\Utilities.Sql\bin\Debug\Utilities.Sql.dll" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Utilities.Sql" #>
<#@ include file="..\T4_Utilities\SQL Generator Utilities.ttinclude" #>
<#@ include file="Entity Classes.ttinclude" #>
<#@ include file="Data Access Classes.ttinclude" #>
<#

using (var connection = new SqlConnection("Data Source=laptop2;Initial Catalog=AdventureWorks2012;Integrated Security=true;"))
{
  connection.Open();
  
  var configuration =
    new Utilities.Sql.Configuration()
    {
      Connection = connection,
      XmlSystem = XmlSystem.Linq_XDocument,
      TargetLanguage = TargetLanguage.VisualBasic,
      IsTargetLanguageCaseSensitive = IsTargetLanguageCaseSensitive.No
    }; 

  var outputDirectory = Path.GetDirectoryName(this.Host.ResolvePath("."));
  var server = new Server(configuration);

  /* In these templates, to prevent code generation for a particular database,
     add its name to the list of ignored database names.

     Note that the Server.Databases.IgnoredDatabaseNames property only affects
     what's returned by the Server.Databases.RelevantDatabases property.
     
     By default, the IgnoredDatabaseNames includes "master", "model", "msdb",
     "tempdb", "reportserver", and "reportservertempdb".

     Also note that the IgnoredDatabaseNames and RelevantDatabases properties don't have any
     effect if your code enumerates the databases directly (e.g. foreach (var db in server.Databases)),
     or accesses an individual database directly (e.g. server.Databases["utilities"]). */
  
  //server.Databases.IgnoredDatabaseNames.Add("AdventureWorks2012");

  this.GenerateEntityClasses(server, outputDirectory); 
  this.GenerateDataAccessClasses(server, outputDirectory);
}

#>