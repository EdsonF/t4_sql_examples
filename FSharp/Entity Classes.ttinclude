<#+

private void GenerateEntityClasses(IEnumerable<Database> databases, String outputDirectory)
{
  foreach (var database in databases)
  {
    var outputFilename = IdentifierHelper.GetTargetLanguageIdentifier(database.Name) + ".Entities";

#>
namespace <#= outputFilename #>

<#+

    foreach (var schema in database.Schemas.OrderBy(schema => schema.Name))
    {
      foreach (var table in schema.Tables.OrderBy(table => table.Name))
      {

#>
  type <#= table.TargetLanguageTableIdentifier #>() =
<#= String.Join(Environment.NewLine, table.Columns.GetNecessaryTargetLanguageBackingStoreDeclarations()).Indent(4) #>

<#= String.Join(Environment.NewLine, table.Columns.GetClassPropertyDeclarations("public")).Indent(4) #>
  
<#+
      } // foreach table
    } // foreach schema

    this.SaveOutput(Path.Combine(outputDirectory, outputFilename + ".fs"));
  } // foreach database
}
#>