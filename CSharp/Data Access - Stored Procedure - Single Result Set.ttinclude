<#+
private void WriteStoredProcedureSingleResultSetMethod(StoredProcedure storedProcedure)
{
#>
public static IEnumerable<<#= storedProcedure.TargetLanguageIdentifier #>> Select<#= storedProcedure.TargetLanguageIdentifier #>
  (
<#+
  this.PushWritePop(_standardIndent.Repeat(2), storedProcedure.GetTargetLanguageMethodParameterNameAndTypes().Join("," + Environment.NewLine));
#>
  )
{
  var result = new List<<#= storedProcedure.TargetLanguageIdentifier #>>();
      
  using (var connection = new SqlConnection(_connectionString))
  {
    connection.Open();

    using (var command = new SqlCommand() { Connection = connection, CommandType = CommandType.StoredProcedure, CommandText = "<#= storedProcedure.SqlIdentifier #>" })
    {
      command.Parameters.Clear();
<#+
  if (storedProcedure.SqlParameters.Any())
  {
    this.PushWritePop(_standardIndent.Repeat(3),
      storedProcedure
      .SqlParameters
      .Select(p => String.Format("command.Parameters.Add({0});", FixupSqlParameterValue(p)))
      .Join());
  }
#>

      using (var reader = command.ExecuteReader(CommandBehavior.CloseConnection))
      {
        while (reader.Read())
        {
          result.Add(
            new <#= storedProcedure.TargetLanguageIdentifier #>()
            {
<#+
  this.PushWritePop(_standardIndent.Repeat(7), this.GetSqlCommandReaderAssigments(storedProcedure.ResultSets.First()));
#>
            });
        }
      }

      return result;
    }
  }
}

<#+
}
#>
